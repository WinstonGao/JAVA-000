Classfile /D:/project/JavaProjects/geektime-geekbang/JAVA-000/Week_01/code/target/production/code/com/company/JvmAssignment1ClassAnalyze.class
  Last modified 2020-10-18; size 589 bytes
  MD5 checksum fd38d45e75a9662d9dd9b98672c116fc
  Compiled from "JvmAssignment1ClassAnalyze.java"
public class com.company.JvmAssignment1ClassAnalyze
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #3.#21         // java/lang/Object."<init>":()V
   #2 = Class              #22            // com/company/JvmAssignment1ClassAnalyze
   #3 = Class              #23            // java/lang/Object
   #4 = Utf8               <init>
   #5 = Utf8               ()V
   #6 = Utf8               Code
   #7 = Utf8               LineNumberTable
   #8 = Utf8               LocalVariableTable
   #9 = Utf8               this
  #10 = Utf8               Lcom/company/JvmAssignment1ClassAnalyze;
  #11 = Utf8               main
  #12 = Utf8               ([Ljava/lang/String;)V
  #13 = Utf8               j
  #14 = Utf8               I
  #15 = Utf8               args
  #16 = Utf8               [Ljava/lang/String;
  #17 = Utf8               i
  #18 = Utf8               StackMapTable
  #19 = Utf8               SourceFile
  #20 = Utf8               JvmAssignment1ClassAnalyze.java
  #21 = NameAndType        #4:#5          // "<init>":()V
  #22 = Utf8               com/company/JvmAssignment1ClassAnalyze
  #23 = Utf8               java/lang/Object
{
  public com.company.JvmAssignment1ClassAnalyze();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/company/JvmAssignment1ClassAnalyze;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: iconst_0                //int类型常量0入栈，操作数0
         1: istore_1                //把栈顶的值写入本地变量1Slot，值为0
         2: iload_1                 //把本地变量1Slot的int型变量值入栈
         3: bipush        100       //把值100入栈（int型值在-128~127之间时入栈使用）
         5: iadd                    //堆栈两操作数进行int加法运算，并把结果入栈到栈顶
         6: istore_1                //把栈顶的值写入本地变量1的Slot,值为100
         7: iload_1                 //把本地变量1Slot的int型变量值入栈
         8: bipush        99        //把值100入栈（int型值在-128~127之间时入栈使用）
        10: isub                    //堆栈两操作数进行int减法运算，并把结果入栈到栈顶
        11: istore_1                //把栈顶的值写入本地变量1的Slot,值为1
        12: iload_1                 //把本地变量1Slot的int型变量值入栈
        13: bipush        100       //把值100入栈（int型值在-128~127之间时入栈使用）
        15: imul                    //int型乘法运算
        16: istore_1
        17: iload_1
        18: iconst_2                //常量2入栈，
        19: idiv
        20: istore_1
        21: iconst_0
        22: istore_2
        23: iload_2
        24: iconst_3
        25: if_icmpge     43        //比较结果>0，跳转到43指令行，（return）
        28: iload_1
        29: bipush        50
        31: if_icmpge     37
        34: iinc          1, 1
        37: iinc          2, 1
        40: goto          23        //跳转到23指令行
        43: return
      LineNumberTable:
        line 6: 0
        line 7: 2
        line 8: 7
        line 9: 12
        line 10: 17
        line 12: 21
        line 13: 28
        line 14: 34
        line 12: 37
        line 17: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      20     2     j   I
            0      44     0  args   [Ljava/lang/String;
            2      42     1     i   I
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ int, int ]
        frame_type = 13 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
}
SourceFile: "JvmAssignment1ClassAnalyze.java"